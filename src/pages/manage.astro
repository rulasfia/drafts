---
import MainLayout from "../layouts/main-layout.astro";
import { drizzle } from "drizzle-orm/d1";
import { contents } from "../schema";
import { getAllContent } from "../utils/query";
import UpdateContentButton from "../components/update-content-button.svelte";
import PublishContentSwitch from "../components/publish-content-switch.svelte";

const { env } = Astro.locals.runtime;

// check for secret
const inputSecret = new URL(Astro.request.url).searchParams.get("pass");
if (inputSecret !== env.SECRET) {
	return new Response(null, { status: 404 });
}

const res = await getAllContent(env.GITHUB_PAT);
const dbRes = await drizzle(env.DB).select().from(contents);

const data = res.entries
	.filter((entry) => entry.name.includes(".md"))
	.map((entry) => {
		const existing = dbRes.find((item) => item.path === entry.path);
		return {
			id: existing?.id ?? null,
			name: entry.name,
			path: entry.path,
			status: existing?.status ?? "private",
		};
	});
---

<MainLayout>
	<div class="container mx-auto px-4 md:px-0 py-9 max-w-[65ch]">
		<h1 class="text-center font-heading text-3xl lg:text-4xl font-bold">
			Manage
		</h1>
		<p class="text-center">Manage your content</p>

		<div class="grid grid-cols-1 mt-8">
			{
				data.map((entry) => (
					<form class="flex flex-row justify-between items-center gap-2 px-4 py-4 border-b border-b-gray-300">
						<div>
							<span class="h-8 inline-flex items-center rounded-md w-full">
								{entry.name}
							</span>
						</div>

						<input type="hidden" name="path" value={entry.path} />
						<input
							type="hidden"
							name="status"
							value={entry.status === "private" ? "public" : "private"}
						/>

						<div class="flex flex-row gap-4 items-center justify-end flex-1">
							<UpdateContentButton
								id={entry.id}
								status={entry.status}
								client:load
							/>

							<PublishContentSwitch
								path={entry.path}
								status={entry.status}
								client:load
							/>
						</div>
					</form>
				))
			}
		</div>
	</div>
</MainLayout>
